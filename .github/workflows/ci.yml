name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
jobs:
  test-and-build:
    strategy:
      matrix:
        go-version: [1.18]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - if: matrix.os == 'ubuntu-latest'
        name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.42.1
          # work around for "file exists" errors.
          # See https://github.com/golangci/golangci-lint-action/issues/135#issuecomment-791775296
          skip-go-installation: true
          skip-pkg-cache: true
          only-new-issues: true
      - name: Run unit tests
        run: make test
      - name: Build collector
        run: make build
      - if: matrix.os != 'windows-latest'
        name: Launch collector for E2E tests
        run: ./collector --config ./_tests/e2e/test-config.yml &
      - if: matrix.os != 'windows-latest'
        name: Run E2E tests
        run: ./_tests/e2e/test.sh ./exported-trace.json

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          # this workflow runs on PRs, it only tests if the image can be built
          push: false
          context: .
          file: ./Dockerfile
          tags: hypertrace/hypertrace-collector:latest
          build-args: |
            VERSION=latest
            GIT_COMMIT=${GITHUB_SHA}
      - name: Scan image
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: "hypertrace/hypertrace-collector:latest"
        env:
          DOCKLE_HOST: "unix:///var/run/docker.sock"
        continue-on-error: true
      - name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}
